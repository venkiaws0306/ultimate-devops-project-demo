# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

# CI work flow for product catalog Services

name: product-catelog-CICD

on: 
    pull_request:
        branches:
        - main

jobs:
     build:
        runs-on: ubuntu-latest

        steps:
         - name: checkout code
           uses: actions/checkout@v4
           
         - name: Setup Go 1.22
           uses: actions/setup-go@v2
           with:
            go-version: 1.22

         - name: Build
           run: |
            cd src/product-catalog
            go mod download
            go build -o product-catalog-service main.go

         - name: Build
           run: |
            cd src/product-catalog
            go mod download
            go build -o product-catalog-service main.go


     code-qualty:
        runs-on: ubuntu-latest 

        steps: 
            - name: checkout code 
              uses: actions/checkout@v4

            - name: Run-golongcli-lint
              run: |
                    go install github.com/golangci/golangci-lint/cmd/golangci-lint@1.56.2
                    golangci-lint run src/product-catalog/..


     docker:
        runs-on: ubuntu-latest

        needs: build

        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: Install Docker
          uses: docker/setup-buildx-action@v1
        
        - name: Login to Docker
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}

        - name: Docker Push
          uses: docker/build-push-action@v6
          with:
            context: src/product-catalog
            file: src/product-catalog/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/product-catalog:${{github.run_id}}

    
     updatek8s:
        runs-on: ubuntu-latest

        needs: docker

        steps:
        - name: checkout code
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.GITHUB_TOKEN }}

        - name: Update tag in kubernetes deployment manifest
          run: | 
               sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/product-catalog:${{github.run_id}}|" kubernetes/productcatalog/deploy.yaml
        
        - name: Commit and push changes
          run: |
            git config --global user.email "abhishek@gmail.com"
            git config --global user.name "Abhishek Veeramalla"
            git add kubernetes/productcatalog/deploy.yaml
            git commit -m "[CI]: Update product catalog image tag"
            git push origin HEAD:main -f
    

